1.实例化对象的方式
	new、克隆、反射、序列化
2.类在被初始化的时候，要求它的所有父类都已经被初始化，但是这条规则对于接口去不适用，在接口的非常量
	字段被调用的时候，才会导致初始化，不会因为子接口的初始化而导致父接口的初始化
3.类型首次使用时必须被初始化
4.生命周期
	装载：装载遇到异常的时候，在类首次使用的时候才抛出异常
	初始化：类变量初始化语句和静态初始化语句
	final: 编译时常量，会被java编译器特殊处理,，所以不会保存到方法区中区,
5.实例化
	一旦虚拟机为新的对象准备好内存，立即把实例变量吃是花为默认的初始值
	类初始化方法、实例初始化方法
	finalize方法，垃圾收集器至始至终只会调用一次
6.卸载
	使用启动类装载器装载的类型永远是可触及的
	用户的类装载器装载的类型才会变成不可触及的
	

	
垃圾收集：
	使用垃圾收集堆，加大了程序的负担，会导致性能
	追踪哪些对象被正在执行的程序所引用，并且动态的终结并释放不再被使用的对象
	占用更多的cpu时间
垃圾收集算法:
	1.必须检查出垃圾对象
	2.回收垃圾对象使用的堆空间并换给程序
	3.根对象集合（局部变量中的对象引用，栈帧的操作数栈）
	4.引用计数和跟踪
		引用计数：当一个对象被回收，它引用的对象的计数减去1，一个对象被回收，会导致后续对象的回收
				无法解决循环引用的问题